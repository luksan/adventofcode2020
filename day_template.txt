
const INPUT_FILE: &str = "data/2021/dayN.txt";

type LineType = String;
type LineContainer = Vec<LineType>;

fn load_input<L: IntoIterator<Item = S>, S: AsRef<str>>(line_source: L) -> LineContainer {
    line_source.into_iter().map(parse).collect()
}

fn parse<S: AsRef<str>>(s: S) -> LineType {
    s.as_ref().parse::<LineType>().unwrap()
}

fn part1(_lines: &LineContainer) -> usize {
    0
}

fn part2(_lines: &LineContainer) -> usize {
    0
}

#[test]
fn real_data() {
    let d = load_input(crate::load_strings(INPUT_FILE));
    assert_eq!(part1(&d), 1);
    // assert_eq!(part2(&d), 1);
}

#[test]
fn test_data() {
    let data = // Example data
        "";
    let d = load_input(data.lines());
    assert_eq!(part1(&d), 1);
    // assert_eq!(part2(&d), 1);
}
